/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  9
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       volScalarField;
    object      plt_Pmu;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#include "$FOAM_CASE/constant/inputParameters"

dimensions      [0 -3 0 0 0 0 0];

internalField   uniform 0;

boundaryField
{
    inletVessel
    {
        type            codedFixedValue;
        value           uniform 0;
        name            rampPmu_Inlet;

        code
        #{
            // wall shear rate inverse seconds
            const scalar Plt_0
                = readScalar
                    (
                        db().lookupObject<IOdictionary>
                        (
                            "inputParameters"
                        ).lookup("Plt_0")
                    );

            const scalar t_start
                = readScalar
                    (
                        db().lookupObject<IOdictionary>
                        (
                            "inputParameters"
                        ).lookup("t0_Plt")
                    );
            const scalar t_stop
                = readScalar
                    (
                        db().lookupObject<IOdictionary>
                        (
                            "inputParameters"
                        ).lookup("tf_Plt")
                    );
            scalar m = Plt_0 / (t_stop - t_start);

            operator==
            (
                max(
                        0.0, 
                        min(Plt_0, m*this->db().time().value() - m*t_start)
                    )
            );
        #};
    }
    
    outletVessel
    {
        type            zeroGradient;
    }

    fixedWalls
    {
        type            zeroGradient;
    }
    
    injuryWalls
    {
        type            zeroGradient;
    }
    
    frontAndBack
    {
        type            empty;
    }
}

// ************************************************************************* //
